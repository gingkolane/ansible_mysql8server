---
# This code is to install MySQL8.0 and apply our custom root user etc.
# Previously for mysql5.7, we download and install mysql using shell command ----------------
# shell: rpm -Uvh http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
# For mysql 8, We install mysql using yum repository.
# The MySQL Yum repository provides a simple and convenient way to install and update MySQL products with the latest software packages using Yum.

# Installation using yum install is a little different from install mysql using rpm -Uvh
# yum install create at installation preset configuration and related files, including
# 1. data directory initialization may be done for you automatically, include: my.cnf, my.cnf.d
# 2. startup and shutdown managed by systemd
# 3. MySQL server mysqld should be started by the local mysql operating system user. Starting by another operating system user is not supported by the init scripts that are included as part of the MySQL repositories.

- name: download mysql8 using yum
  yum:
    name: https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm
    state: installed
  ignore_errors: no

- name: Install the mysql packages
  yum:
    name:
      - mysql-community-server
      # - mysql
      # - mysql-server
      - MySQL-python
    state: installed

# yum installs mysql-community-server, which packaged mysql, mysql-server and other components required to run the server:
# mysql-community-client: mysql client
# mysql-community-common: the common error messages and character sets for client and server
# mysql-community-libs: shared client libraries
# https://docs.ansible.com/ansible/latest/modules/yum_module.html
# If install from rpm -Uvh, you list and install all of the above components by one

# 2. replace the preset my.cnf with our own my.cnf configuration file
- name: Copy my.cnf global MySQL configuration, this file is the mysql config file
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf
    owner: root
    group: root
    mode: 0644

- name: Start the mysql services
  systemd: name=mysqld state=started enabled=yes

# 3. mysql secure install automatically creates a temporary password to default root user and requre us change it before doing anything else -----------------------
- name: get automatically created temporary password from /var/log/mysqld.log
  shell: cat /var/log/mysqld.log | grep "temporary password"
  register: mysql_temp_rootpass

- name: Give default root user a temporary password, so that we can login and create our custom root user
  shell: >
    mysql -NBe
    'ALTER USER root@localhost IDENTIFIED WITH mysql_native_password BY "87jude7Hu55_9";'
    -u root --password='{{ mysql_temp_rootpass.stdout.split(': ')[-1] }}'
    --connect-expired-password=True

- name: login using default root and temp password just assigned, and creates new custom mysql root user to replace default root user
  mysql_user:
    name: "{{ mysql_root_username }}"
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    # encrypted: yes
    priv: '*.*:ALL,GRANT'
    state: present
    login_user: root
    login_password: '87jude7Hu55_9'
  with_items:
   - localhost  # localhost connect mysql using socket pre-defined in my.cnf
   - 127.0.0.1   # allow mysql clients to connect to mysql using reserved MySQL network port 127.0.0.1
# The server must grant privileges to client users for specifically 127.0.0.1. The client must use -h 127.0.0.1 to go through the tunnel instead of connecting via a local socket.

# Log in using new custom root user and provide password using root-my.cnf instead of login_user and login_password
- name: copy .my.cnf file with new root user password credentials
  template:
    src: root-my.cnf.j2
    # dest: ~/.my.cnf
    dest: "{{ mysql_root_home }}/.my.cnf"
    mode: 0600

# 4. remove the default users and databases --------------------------
- name: Remove the default 'root' user
  mysql_user:
    name: root
    host_all: yes
    state: absent

- name: Ensure anonymous users are not in the database
  mysql_user:
    name: ''
    host_all: yes
    state: absent

- name: remove the test database
  mysql_db:
    name: test
    state: absent
  notify:
    - restart mysql
