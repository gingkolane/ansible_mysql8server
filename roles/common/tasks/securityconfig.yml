---
#==========================================================================
# This role summarize configurations of three security related programs
# ssh, firewalld, selinux
# 1. sshd:
#    sshd_config file: forbid root login remotely,change ssh default port
# 2. firewalld:
#    disable default ports, open custom ports to permit different applications
# 3. selinux:
#    disable default ports, open custom ports to permit different applications
# =============================================================================


# ---------------1. ssh security configurations-------------------

# https://docs.ansible.com/ansible/latest/modules/blockinfile_module.html
- name: change default ssh port in sshd_config
  blockinfile:
    path: "/etc/ssh/sshd_config"
    regexp: "^Port 22"
    state: present
    insertafter: EOF
    block: |
     #=========================================================
     #These are configuration changes we made in our own servers
     Port {{mrd_ports.ssh}}
  notify: reload sshd

# https://docs.ansible.com/ansible/latest/modules/lineinfile_module.html#lineinfile-module
- name: Disable root login via SSH
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^PermitRootLogin"
    state: present
    insertafter: EOF
    line: "PermitRootLogin no"
  notify: reload sshd

# --------------2. Firewalld configuration ------------
# firewalld is under system modules in ansible module directory
# https://docs.ansible.com/ansible/latest/modules/firewalld_module.html#firewalld-module

# ---------------- install firewalld -----------------------------

- name: firewall installation
  yum:
    name: firewalld
    state: installed

- name: Enable and start firewalld
  service: name=firewalld state=started enabled=yes

- name: disable default ssh port in firewall
  firewalld:
    port: 22/tcp
    permanent: yes
    state: disabled
  notify:
    - reload firewalld

- name: open custom ports in firewalld, as defined in mrd_ports from group_vars/all
# Note custom application ports need first to be set in its respective config file. For example, ssh_port for sshd_config
  firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
  with_items:
    - "{{ mrd_ports.ssh }}"
    # - "{{ mrd_ports.mysql }}"
# available ansible 2.8, will use this later on.
# - "{{ mrd_ports | dict2items(key_name='service', value_name='port') | map('port') | list }}"
  notify:
    - reload firewalld

# ---------- 3. selinux configuration -------------------
# several modules are related to selinux, they are under system in ansible module directory
#     selinux, seport, seboolean, sefcontext, selinux_permissive

# -------------  install selinux -----------------
- name: install additional selinux components not preinstalled in yum repo of centos7
  yum:
    name:
      - libselinux-python
      - libsemanage-python
    state: installed
# yum repo preinstall majority of the selinux components as below:
    # - policycoreutils
    # - policycoreutils-python
    # - selinux-policy
    # - selinux-policy-targeted
    # - libselinux-utils
    # - setroubleshoot-server
    # - setools
    # - setools-console
    # - mcstrans

- name: Turn selinux to permissive mode
  selinux:
    policy: targeted
    state: permissive

- name: start selinux
  shell: setenforce 1

# https://docs.ansible.com/ansible/latest/modules/seport_module.html?highlight=selinux
- name: Allow custom ssh port open in selinux
  seport:
    ports: "{{mrd_ports.ssh}}"
    proto: tcp
    setype: ssh_port_t
    state: present
    reload: yes # Reload SELinux policy after commit.

# https://docs.ansible.com/ansible/latest/modules/selinux_module.html?highlight=selinux
# - name: turn selinux to enforcing mode
#   selinux:
#     policy: targeted
#     state: enforcing
#
# - name: start selinux
#   shell: setenforce 1


# ============================
# Notes:
# Use selectattr
# Port {{ mrd_ports | selectattr( 'service' match 'ssh') | map('port') }}
 # About map: http://jinja.pocoo.org/docs/dev/templates/#map
 # ABout selectattr: http://www.oznetnerd.com/jinja2-selectattr-filter/

# User map to create a filtered list of items
# - name: create a list of port numbers from the list of mrd_ports
#   set_fact:
#     port_list: "{{ mrd_ports | map(attribute='port') | list }}"

# initial methods used by vivian
# - name: open new ssh port in firewall, note this port needs first to set in sshd_config as in above
#   firewalld:
#     port: "{{ item }}/tcp"
#     permanent: true
#     state: enabled
#   with_items:
#     - "{{ssh_port}}"
  # notify:
  #   - reload firewalld

# We can also so this by copy and past the whole ssh_config file with desired setting
# But this way we can not know what is changed when.
# - name: copy sshd_config file and reset ssh port
#   template: src=sshd_config.j2 dest=/etc/ssh/sshd_config
